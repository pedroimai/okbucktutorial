#!/bin/bash
# Run with -e so the script will fail if any of the steps fail.
set -e

SCRIPT_TO_RUN=<script_to_run>
DEFAULT_RUNTIME_RESOURCES_RELATIVE=<default_runtime_resources>
EXTERNAL_RUNTIME_RESOURCES_RELATIVE=<external_runtime_resources>

BUCK_PROJECT_ROOT_FILE=<path_to_project_root_file>
# This script can be cached and used on machines other than the one where it was created. That
# means it can't contain any absolute filepaths. Expose the absolute filepath of the root of
# the project as $BUCK_REAL_ROOT, determined at runtime.

# `cd` can produce output under specific configuration (for example, when CDPATH is present),
# redirecting its output to /dev/null
BUCK_REAL_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null && pwd)"
BUCK_PROJECT_ROOT_FILE_LOCATION="$BUCK_REAL_ROOT/$BUCK_PROJECT_ROOT_FILE"
if [ ! -f "$BUCK_PROJECT_ROOT_FILE_LOCATION" ]; then
  (>&2 echo "Failed to check that $BUCK_PROJECT_ROOT_FILE_LOCATION is a file")
  if [ ! -e "$BUCK_PROJECT_ROOT_FILE_LOCATION" ]; then
    (>&2 echo "$BUCK_PROJECT_ROOT_FILE_LOCATION doesn't exist")
  fi
  (>&2 echo "BUCK_REAL_ROOT: $BUCK_REAL_ROOT")
  (>&2 echo "BUCK_PROJECT_ROOT_FILE: $BUCK_PROJECT_ROOT_FILE")
  exit 1
fi
BUCK_PROJECT_ROOT="$(cat $BUCK_PROJECT_ROOT_FILE_LOCATION)"
export BUCK_DEFAULT_RUNTIME_RESOURCES="$BUCK_PROJECT_ROOT/$DEFAULT_RUNTIME_RESOURCES_RELATIVE"
export BUCK_EXTERNAL_RUNTIME_RESOURCES="$BUCK_PROJECT_ROOT/$EXTERNAL_RUNTIME_RESOURCES_RELATIVE"

BUCK_TMP_ROOT="$(mktemp -d $BUCK_REAL_ROOT/sh_binary.XXXXXXXXXX)"
trap "rm -rf $BUCK_TMP_ROOT" EXIT HUP INT TERM

# Setup the symlinks in a subshell to avoid modifying state (e.g. chdir).
(
  cd "$BUCK_TMP_ROOT"

  # Create symlink to the cells in the folder containing this script.
  CELLS_NAMES=(
  <cell_names:{x|   <x><\n>}>
  )
  CELLS_PATHS=(
  <cell_paths:{x|   <x><\n>}>
  )

  # The following operation needs to be atomic.
  if [ ! -d "$BUCK_REAL_ROOT/cells/" ] ; then
    tmpfolder="`mktemp -d "$BUCK_REAL_ROOT/tmp.XXXXXXXXXX"`"
    for idx in "${!CELLS_NAMES[@]}"; do
      name="${CELLS_NAMES[$idx]}"
      path="${CELLS_PATHS[$idx]}"
      ln -sf "$BUCK_PROJECT_ROOT/$path" "$tmpfolder/$name"
    done
    mv -n "$tmpfolder/" "$BUCK_REAL_ROOT/cells/" 2>/dev/null || true
  fi

  # Symlink the resources to the $BUCK_TMP_ROOT directory.
  SYMLINK_PATHS=(
  <resources:{x|   <x><\n>}>
    "__default__/$SCRIPT_TO_RUN"
  )

  for path in "${SYMLINK_PATHS[@]}"; do
    mkdir -p "$(dirname "$path")"
    ln -sf "$BUCK_REAL_ROOT/cells/$path" "$BUCK_TMP_ROOT/$path"
  done
)

BUCK_PROJECT_ROOT="$BUCK_TMP_ROOT/__default__" "$BUCK_TMP_ROOT/__default__/$SCRIPT_TO_RUN" "$@"
